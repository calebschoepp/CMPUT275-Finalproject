---------------------------------------------------
Names: Robert Mah, Caleb Schoepp
ID: 1532565, 1534577
CCID: rjmah1, cwschoep
CMPUT 275 , Winter 2019

Arduino Sudoku Solver
---------------------------------------------------

Included Files:
    - README
    - circuit-wiring.txt
    /server
        - algo_backtracking.cpp
        - algo_backtracking.h
        - algo_dancing_links.cpp
        - algo_dancing_links.h
        - algo_human_heuristic.cpp
        - algo_human_heuristic.h
        - algo_improved_human_heuristic.cpp
        - algo_improved_human_heuristic.h
        - consts_and_types.h
        - Makefile
        - serialport.cpp
        - serialport.h
        - server.cpp
        /sudokus
            - easy-00.txt
            - easy-01.txt
            - easy-02.txt
            - med-00.txt
            - med-01.txt
            - hard-00.txt
            - hard-01.txt
            - hard-02.txt
            - hard-03.txt
    /client
        - client.cpp
        - consts_and_types.h
        - joy.cpp
        - joy.h
        - Makefile
        - render.cpp
        - render.h
        - serial_comm.cpp
        - serial_comm.h
        - touch.cpp
        - touch.h


Running Instructions:
    1. After downloading the tar file extract it in your working directory with
        the command `tar -zxvf finalproject.tar.gz`.
    2. Before going any further make sure that you have your Arduino Mega wired
        up correctly (see circuit-wiring.txt) and it is plugged into your
        computer.
    3. Now in the working directory call `ulimit -s 20000`, this makes the stack
        size big enough to run some of our algorithms.
    4. Now navigate into the client folder and run `make upload`.
    5. Now navigate into the server folder and run `maker server && ./server`.
    6. Now that the program is running you will see a menu appear on the screen of
        the arduino client. The three options are Solve, Try It, and Setup.
        These can be selected via the touchscreen.
    7. Choosing solve will solve the current sudoku board using the currently
        selected algorithm and will display the process. At any time you can 
        leave with the back button.
    8. Choosing Try It will let you solve the sudoku yourself while always telling
        you whether you are on the right track or not. To navigate the board use
        the joystick and press the joystick to cycle through numbers in your current
        grid square. At any time you can leave with the back button.
    9. Choosing Setup will let modify some of the programs settings. The first thing
        you can modify is the algorithm that Solve uses. The second things you can 
        change is the board that Solve or Try It works off of. Cycle through both of
        these options by using the touchscreen. At any time you can leave with the back
        button.


Assumptions and Comments:
    - Many debug statements are left in the code for easy tracing of the program
        in the terminal.
    - We assume that the stack size will be increased with the command provided in the running
        instructions. If this does not happen the server will segfault.
    - We assume your Arduino will be properly wired to run this program.


Makefile Targets:
    all: Compile and link everything
    server: Create executable for server using objects
    server.o: Compile the object for the server
    consts_and_types.o: Compile the object for shared consts and types
    algo_human_heuristic.o: Compile the object to solve sudokus via human heuristic
    algo_improved_human_heuristic.o: Compile the object to solve sudokus via improved human heuristic
    algo_backtracking.o: Compile the object to solve sudokus via backtracking
    algo_dancing_links.o: Compile the object to solve sudokus via dancing links
    serialport.o: Compile the object for serial communication
    clean: Remove all objects and executables


Wiring Instructions:
    See circuit-wiring.txt in the root folder


Citations:
    - https://medium.com/@george.seif94/solving-sudoku-using-a-simple-search-
        algorithm-3ac44857fee8
    - https://www.geeksforgeeks.org/exact-cover-problem-algorithm-x-set-2-
        implementation-dlx/
    - http://garethrees.org/2007/06/10/zendoku-generation/
    - Donald Knuth's paper on dancing links
    - circuit-wiring.txt provided by Assignment 2 Part 2
    - Client Makefile provided by eClass
    - lcd_image.h and lcd_image.cpp provided by eClass
    - serialport.cpp and serialport.h are taken from the eClass assignment 2
        files.
    - Client consts_and_types.h is adapted from the eClass assignment 2 file.
    - https://github.com/matefh/sudoku
